---

# Create a directory and file under the syndicate user.  With another user, attempt to stat, lstat, chmod, chown, rmdir, unlink, create new dirs and files.
- name: setup_multiuser_syndicatefs_permissions_test
  type: setup
  tmpdirs:
    - name: 200_multiuser_syndicatefs
      varname: config_dir
    - name: 200_multiuser_syndicatefs_mount
      varname: mount_dir
      mode: 0755
  randnames:
    - test_volume
    - test_rg
    - test_ug
  vars:
    - name: n0
      value: $mount_dir/n0
    - name: n1
      value: n1
    - name: syndicate_conf
      value: $config_dir/syndicate.conf
    - name: rg_driver
      value: $SYNDICATE_PYTHON_ROOT/syndicate/rg/drivers/disk
    - name: rg_path
      value: $SYNDICATE_RG_ROOT/syndicate-rg
    - name: fs_path
      value: $SYNDICATE_UG_ROOT/syndicatefs

- name: config
  type: sequential
  tasks:
    - name: setup
      command: $SYNDICATE_TOOL --trust_public_key -c "$syndicate_conf" --debug setup "$SYNDICATE_ADMIN" "$SYNDICATE_PRIVKEY_PATH" "$SYNDICATE_MS"

    - name: add test volume
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_volume name=$test_volume description="test volume" blocksize=4096 email=$SYNDICATE_ADMIN

    - name: create RG
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_gateway name=$test_rg type=RG volume=$test_volume email=$SYNDICATE_ADMIN private_key=auto port=31112

    - name: update RG
      command: $SYNDICATE_TOOL -c "$syndicate_conf" update_gateway name=$test_rg caps=ALL port=31112 driver=$rg_driver

    - name: create UG
      command: $SYNDICATE_TOOL -c "$syndicate_conf" create_gateway name=$test_ug type=UG volume=$test_volume email=$SYNDICATE_ADMIN private_key=auto port=31111

    - name: update UG
      command: $SYNDICATE_TOOL -c "$syndicate_conf" update_gateway name=$test_ug caps=ALL

- name: daemon UG/RG
  type: daemon
  tasks:
    - name: start RG
      command: $rg_path -c "$syndicate_conf" -d2 -f -u $SYNDICATE_ADMIN -v $test_volume -g $test_rg
      exit: 0

    - name: start UG
      command: $fs_path -c "$syndicate_conf" -d2 -f -u $SYNDICATE_ADMIN -v $test_volume -g $test_ug $mount_dir
      exit: 0

- name: check syndicate is mounted
  type: sequential
  tasks:
    - name: wait for RG to be online
      command: $tasksf_dir/waitgateway.py localhost 31112 20
      exit: 0
        
    - name: wait for UG to be online
      command: $tasksf_dir/waitgateway.py localhost 31111 20
      exit: 0

- name: run chmod tests 01
  type: sequential
  tasks:
    # expect 0 mkdir ${n0} 0700
    - name: T1 - expect 0 mkdir [n0] 0700
      command: fstest mkdir ${n0} 0700
      compareout: "0"

    # expect 0700 stat ${n0} mode
    - name: T1 - expect 0700 stat [n0] mode
      command: fstest stat ${n0} mode
      compareout: "0700"

    # expect dir lstat ${n0} type
    - name: T1 - expect dir lstat [n0] type
      command: fstest lstat ${n0} type
      compareout: "dir"

    # expect 0 create ${n0}/${n1} 0644
    - name: T1 - expect 0 create [n0]/[n1] 0644
      command: fstest create ${n0}/${n1} 0644
      compareout: "0"

    # expect 0644 stat ${n0}/${n1} mode
    - name: T1 - expect 0644 stat [n0]/[n1] mode
      command: fstest stat ${n0}/${n1} mode
      compareout: "0644"

    # expect regular lstat ${n0}/${n1} type
    - name: T1 - expect regular lstat [n0]/[n1] type
      command: fstest lstat ${n0}/${n1} type
      compareout: "regular"

    # expect EACCES -u 1001 stat ${n0} mode
    # note: POSIX should return "0700" successfully, but syndicate cannot process other UIDs, and should return EACCES
    - name: T1 - expect EACCES -u 1001 stat [n0] mode
      command: sudo fstest -u 1001 stat ${n0} mode
      compareout: "EACCES"
      exit: 1

    # expect EACCES -u 1001 stat ${n0}/${n1} mode
    - name: T1 - expect EACCES stat -u 1001 [n0]/[n1] mode
      command: sudo fstest -u 1001 stat ${n0}/${n1} mode
      compareout: "EACCES"
      exit: 1

    # expect "" -u 1001 lstat ${n0} type
    # note: POSIX should return "dir", syndicate should return EACCES
    - name: T1 - expect EACCES -u 1001 lstat [n0] type
      command: fstest -u 1001 lstat ${n0} type
      compareout: ""
      exit: 1

    # expect "" lstat ${n0}/${n1} type
    # note: POSIX should return "EACCES", but syndicate returns ""
    - name: T1 - expect EACCES -u 1001 lstat [n0]/[n1] type
      command: fstest -u 1001 lstat ${n0}/${n1} type
      compareout: ""
      exit: 1

    # expect EACCES -u 1001 chown ${n0} 1001 1001
    - name: T12 - expect EACCES -u 1001 chown [n0] 1001 1001
      command: sudo fstest -u 1001 chown ${n0} 1001 1001
      compareout: "EACCES"
      exit: 1

    # expect EACCES -u 1001 chown ${n0}/${n1} 1001 1001
    - name: T12 - expect EACCES -u 1001 chown [n0]/[n1] 1001 1001
      command: sudo fstest -u 1001 chown ${n0}/${n1} 1001 1001
      compareout: "EACCES"
      exit: 1

    # expect EACCES -u 1001 chmod ${n0} 0777
    - name: T12 - expect EACCES -u 1001 chmod [n0] 0777
      command: sudo fstest -u 1001 chmod ${n0} 0777
      compareout: "EACCES"
      exit: 1

    # expect EACCES -u 1001 chmod ${n0}/${n1} 0777
    - name: T12 - expect EACCES -u 1001 chmod [n0]/[n1] 0777
      command: sudo fstest -u 1001 chmod ${n0}/${n1} 0777
      compareout: "EACCES"
      exit: 1

    # expect EACCES -u 1001 rmdir ${n0}/{n1}
    - name: T1 - expect EACCES -u 1001 rmdir [n0]/[n1]
      command: sudo fstest -u 1001 rmdir ${n0}/${n1}
      compareout: "EACCES"
      exit: 1

    # expect EACCES -u 1001 unlink ${n0}/${n1}
    - name: T1 - expect EACCES -u 1001 unlink [n0]/[n1]
      command: sudo fstest -u 1001 unlink ${n0}/${n1}
      compareout: "EACCES"
      exit: 1

    # expect 0 unlink ${n0}/${n1}
    - name: T1 - expect 0 unlink [n0]/[n1]
      command: fstest unlink ${n0}/${n1}
      compareout: "0"

    # expect EACCES -u 1001 create ${n0}/${n1} 0644
    - name: T1 - expect EACCES -u 1001 create [n0]/[n1] 0644
      command: sudo fstest -u 1001 create ${n0}/${n1} 0644
      compareout: "EACCES"
      exit: 1

    # expect EACCES -u 1001 create ${n1} 0644
    - name: T1 - expect EACCES -u 1001 create [n1] 0644
      command: sudo fstest -u 1001 create ${n0}/${n1} 0644
      compareout: "EACCES"
      exit: 1

    # expect 0 rmdir ${n0}
    - name: T1 - expect 0 rmdir [n0]
      command: fstest rmdir ${n0}
      compareout: "0"

    # expect "" -u 1001 mkdir ${n0} 0700
    # note: POSIX should return "EACCES", but syndicate returns "", UG shouldn't recognize other users
    - name: T1 - expect EACCES -u 1001 mkdir [n0] 0700
      command: fstest -u 1001 mkdir ${n0} 0700
      compareout: ""
      exit: 1


